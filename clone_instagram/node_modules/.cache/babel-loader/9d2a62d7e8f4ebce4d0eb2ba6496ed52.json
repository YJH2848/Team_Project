{"ast":null,"code":"var _jsxFileName = \"C:\\\\instagram\\\\clone_instagram\\\\src\\\\Sign_components\\\\Sign.js\",\n    _s = $RefreshSig$();\n\n// import { Link } from 'react-router-dom';\n// import { useRef, useState, useEffect, useContext } from 'react';\n// import AuthContext from \"../context/AuthProvider\";\n// import axios from 'axios';\n// const LOGIN_URL = 'http://127.0.0.1:8000/user/signin/';\n// const Login = () => {\n//     const { setAuth } = useContext(AuthContext);\n//     const userRef = useRef();\n//     const errRef = useRef();\n//     //이메일 이름 비밀번호\n//     const [email, setEmail] = useState('');\n//     const [nickname, setName] = useState('');\n//     const [password, setPwd] = useState('');\n//     //성공실패 여부\n//     const [errMsg, setErrMsg] = useState('');\n//     const [success, setSuccess] = useState(false);\n//     useEffect(() => {\n//         userRef.current.focus();\n//     }, [])\n//     useEffect(() => {\n//         setErrMsg('');\n//     }, [email, nickname, password])\n//     const handleSubmit = async (e) => {\n//         e.preventDefault(); {/*(e)코드를 작동하지 못하게 하는 메서드*/ }\n//         try {\n//             const response = await axios.post(LOGIN_URL,\n//                 JSON.stringify({ email, nickname, password }), {\n//                 headers: {\n//                     \"Content-Type\": 'application/json',\n//                 },\n//             });\n//             console.log(JSON.stringify(response?.data));\n//             //console.log(JSON.stringify(response));\n//             const token = response?.data?.token;\n//             const roles = response?.data?.roles;\n//             setAuth({ email, nickname, password, roles, token });\n//             setEmail('');\n//             setPwd('');\n//             setSuccess(true);\n//         } catch (err) {\n//             if (!err?.response) {\n//                 setErrMsg('No Server Response');\n//             }\n//             else if (err.response?.status === 400) {\n//                 setErrMsg('Missing Username or Password');\n//             }\n//             else if (err.response?.status === 401) {\n//                 setErrMsg('Unauthorized');\n//             }\n//             else {\n//                 setErrMsg('Login Failed');\n//             }\n//             errRef.current.focus();\n//         }\n//     }\n//     return (\n//         <Link to=\"/sign\">\n//             {success ? (\n//                 <section>\n//                     <h1>You are logged in!</h1>\n//                     <br />\n//                     <p>\n//                         <a href=\"#\">Go to Home</a>\n//                     </p>\n//                 </section>\n//             ) : (\n//                 <div className=\"sign_container\">\n//                     <section className='login_section'>\n//                         <p ref={errRef} className={errMsg ? \"errmsg\" :\n//                             \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n//                         <div className='sign_border'>\n//                             <img className='sign_img' width=\"185\" height=\"70\" src=\"./image/pngegg.png\"></img>\n//                             <div className=\"sign\">\n//                                 <form onSubmit={handleSubmit}> {/*form전송을 하기 전 입력된 데이터의 유효성 체크하는 것*/}\n//                                     <div className=\"email\">\n//                                         <label htmlFor=\"useremail\"></label>\n//                                         <input\n//                                             className='sign_input'\n//                                             type=\"text\"\n//                                             id=\"useremail\"\n//                                             ref={userRef}\n//                                             autoComplete=\"off\"\n//                                             onChange={(e) => setEmail(e.target.value)}\n//                                             value={email}\n//                                             required\n//                                             placeholder=\"휴대폰 번호 또는 이메일 주소\"\n//                                         />\n//                                     </div>\n//                                     <div className=\"nickname\">\n//                                         <label htmlFor=\"nickname\"></label>\n//                                         <input\n//                                             className='sign_input'\n//                                             type=\"nickname\"\n//                                             id=\"nickname\"\n//                                             ref={userRef}\n//                                             autoComplete=\"off\"\n//                                             onChange={(e) => setName(e.target.value)}\n//                                             value={nickname}\n//                                             required\n//                                             placeholder=\"성명\"\n//                                         />\n//                                     </div>\n//                                     <div className=\"pwd\">\n//                                         <label htmlFor=\"password\"></label>\n//                                         <input\n//                                             className='login_input'\n//                                             type=\"password\"\n//                                             id=\"password\"\n//                                             ref={userRef}\n//                                             autoComplete=\"off\"\n//                                             onChange={(e) => setPwd(e.target.value)}\n//                                             value={password}\n//                                             required\n//                                             placeholder=\"비밀번호\"\n//                                         />\n//                                     </div>\n//                                     <button className='sign_button'>Sign In</button>\n//                                 </form>\n//                             </div>\n//                         </div>\n//                     </section>\n//                 </div>\n//             )}\n//         </Link>\n//     )\n// }\n// export default Login\nimport React, { useState, useCallback } from 'react';\nimport axios from 'axios';\nimport { Link } from 'react-router-dom';\nimport useInput from '@hooks/useInput';\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from 'Sign.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Signup = () => {\n  _s();\n\n  const [email, onChangeEmail] = useInput('');\n  const [nickname, onChangeNickname] = useInput(''); // email, nickname 중복 -> 커스텀훅으로 제거\n\n  const [password,, setPassword] = useInput('');\n  const [passwordCheck,, setPasswordCheck] = useInput('');\n  const [mismatchError, setMismatchError] = useState(false);\n  const [signUpError, setSignUpError] = useState('');\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\n  const onChangePassword = useCallback(e => {\n    setPassword(e.target.value);\n    setMismatchError(e.target.value !== passwordCheck);\n  }, [passwordCheck]);\n  const onChangePasswordCheck = useCallback(e => {\n    setPasswordCheck(e.target.value);\n    setMismatchError(e.target.value !== password);\n  }, [password]);\n  const onSubmit = useCallback(e => {\n    e.preventDefault();\n    console.log(email, nickname, password, passwordCheck);\n\n    if (!mismatchError) {\n      console.log('서버로 회원가입하기');\n      setSignUpError('');\n      setSignUpSuccess(false); // 요청 보내기 직전에 값들을 전부 초기화 해주자. 아니라면 요청을 연달아 날릴 때\n      // 첫번째 요청때 남아있던 결과가 두번째 요청때도 똑같이 표시되는\n      // 문제가 있을 수 있다.\n\n      axios.post('/api/users', {\n        email,\n        nickname,\n        password\n      }).then(response => {\n        // 성공시\n        console.log(response);\n        setSignUpSuccess(true);\n      }).catch(error => {\n        // 실패시\n        console.log(error.response);\n        setSignUpError(error.response.data);\n      }).finally(() => {});\n    }\n  }, [email, nickname, password, passwordCheck]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: \"Sleact\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: onSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Label, {\n        id: \"email-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uC774\\uBA54\\uC77C \\uC8FC\\uC18C\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"email\",\n            id: \"email\",\n            name: \"email\",\n            value: email,\n            onChange: onChangeEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        id: \"nickname-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uB2C9\\uB124\\uC784\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"text\",\n            id: \"nickname\",\n            name: \"nickname\",\n            value: nickname,\n            onChange: onChangeNickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        id: \"password-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            id: \"password\",\n            name: \"password\",\n            value: password,\n            onChange: onChangePassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Label, {\n        id: \"password-check-label\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            id: \"password-check\",\n            name: \"password-check\",\n            value: passwordCheck,\n            onChange: onChangePasswordCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 11\n        }, this), mismatchError && /*#__PURE__*/_jsxDEV(Error, {\n          children: \"\\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 29\n        }, this), !nickname && /*#__PURE__*/_jsxDEV(Error, {\n          children: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 25\n        }, this), signUpError && /*#__PURE__*/_jsxDEV(Error, {\n          children: signUpError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 27\n        }, this), signUpSuccess && /*#__PURE__*/_jsxDEV(Success, {\n          children: \"\\uD68C\\uC6D0\\uAC00\\uC785 \\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4! \\uB85C\\uADF8\\uC778 \\uD574\\uC8FC\\uC138\\uC694.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 29\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinkContainer, {\n      children: [\"\\uC774\\uBBF8 \\uD68C\\uC6D0\\uC774\\uC2E0\\uAC00\\uC694?\\xA0\", /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/login\",\n        children: \"\\uB85C\\uADF8\\uC778 \\uD558\\uB7EC\\uAC00\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Signup, \"Xr02dHFLMkxYbIKCxsADZWlSndE=\", false, function () {\n  return [useInput, useInput, useInput, useInput];\n});\n\n_c = Signup;\nexport default Signup;\n\nvar _c;\n\n$RefreshReg$(_c, \"Signup\");","map":{"version":3,"names":["React","useState","useCallback","axios","Link","useInput","Success","Form","Error","Label","Input","LinkContainer","Button","Header","Signup","email","onChangeEmail","nickname","onChangeNickname","password","setPassword","passwordCheck","setPasswordCheck","mismatchError","setMismatchError","signUpError","setSignUpError","signUpSuccess","setSignUpSuccess","onChangePassword","e","target","value","onChangePasswordCheck","onSubmit","preventDefault","console","log","post","then","response","catch","error","data","finally"],"sources":["C:/instagram/clone_instagram/src/Sign_components/Sign.js"],"sourcesContent":["// import { Link } from 'react-router-dom';\r\n// import { useRef, useState, useEffect, useContext } from 'react';\r\n// import AuthContext from \"../context/AuthProvider\";\r\n// import axios from 'axios';\r\n\r\n// const LOGIN_URL = 'http://127.0.0.1:8000/user/signin/';\r\n\r\n// const Login = () => {\r\n//     const { setAuth } = useContext(AuthContext);\r\n//     const userRef = useRef();\r\n//     const errRef = useRef();\r\n\r\n\r\n//     //이메일 이름 비밀번호\r\n//     const [email, setEmail] = useState('');\r\n//     const [nickname, setName] = useState('');\r\n//     const [password, setPwd] = useState('');\r\n\r\n//     //성공실패 여부\r\n//     const [errMsg, setErrMsg] = useState('');\r\n//     const [success, setSuccess] = useState(false);\r\n\r\n//     useEffect(() => {\r\n//         userRef.current.focus();\r\n\r\n//     }, [])\r\n//     useEffect(() => {\r\n//         setErrMsg('');\r\n//     }, [email, nickname, password])\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault(); {/*(e)코드를 작동하지 못하게 하는 메서드*/ }\r\n\r\n//         try {\r\n//             const response = await axios.post(LOGIN_URL,\r\n//                 JSON.stringify({ email, nickname, password }), {\r\n//                 headers: {\r\n//                     \"Content-Type\": 'application/json',\r\n//                 },\r\n//             });\r\n//             console.log(JSON.stringify(response?.data));\r\n//             //console.log(JSON.stringify(response));\r\n//             const token = response?.data?.token;\r\n//             const roles = response?.data?.roles;\r\n//             setAuth({ email, nickname, password, roles, token });\r\n//             setEmail('');\r\n//             setPwd('');\r\n//             setSuccess(true);\r\n//         } catch (err) {\r\n//             if (!err?.response) {\r\n//                 setErrMsg('No Server Response');\r\n//             }\r\n//             else if (err.response?.status === 400) {\r\n//                 setErrMsg('Missing Username or Password');\r\n//             }\r\n//             else if (err.response?.status === 401) {\r\n//                 setErrMsg('Unauthorized');\r\n//             }\r\n//             else {\r\n//                 setErrMsg('Login Failed');\r\n//             }\r\n//             errRef.current.focus();\r\n//         }\r\n//     }\r\n//     return (\r\n//         <Link to=\"/sign\">\r\n//             {success ? (\r\n//                 <section>\r\n//                     <h1>You are logged in!</h1>\r\n//                     <br />\r\n//                     <p>\r\n//                         <a href=\"#\">Go to Home</a>\r\n//                     </p>\r\n//                 </section>\r\n//             ) : (\r\n//                 <div className=\"sign_container\">\r\n//                     <section className='login_section'>\r\n//                         <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n//                             \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n//                         <div className='sign_border'>\r\n//                             <img className='sign_img' width=\"185\" height=\"70\" src=\"./image/pngegg.png\"></img>\r\n//                             <div className=\"sign\">\r\n//                                 <form onSubmit={handleSubmit}> {/*form전송을 하기 전 입력된 데이터의 유효성 체크하는 것*/}\r\n//                                     <div className=\"email\">\r\n//                                         <label htmlFor=\"useremail\"></label>\r\n//                                         <input\r\n//                                             className='sign_input'\r\n//                                             type=\"text\"\r\n//                                             id=\"useremail\"\r\n//                                             ref={userRef}\r\n//                                             autoComplete=\"off\"\r\n//                                             onChange={(e) => setEmail(e.target.value)}\r\n//                                             value={email}\r\n//                                             required\r\n//                                             placeholder=\"휴대폰 번호 또는 이메일 주소\"\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className=\"nickname\">\r\n//                                         <label htmlFor=\"nickname\"></label>\r\n//                                         <input\r\n//                                             className='sign_input'\r\n//                                             type=\"nickname\"\r\n//                                             id=\"nickname\"\r\n//                                             ref={userRef}\r\n//                                             autoComplete=\"off\"\r\n//                                             onChange={(e) => setName(e.target.value)}\r\n//                                             value={nickname}\r\n//                                             required\r\n//                                             placeholder=\"성명\"\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className=\"pwd\">\r\n//                                         <label htmlFor=\"password\"></label>\r\n//                                         <input\r\n//                                             className='login_input'\r\n//                                             type=\"password\"\r\n//                                             id=\"password\"\r\n//                                             ref={userRef}\r\n//                                             autoComplete=\"off\"\r\n//                                             onChange={(e) => setPwd(e.target.value)}\r\n//                                             value={password}\r\n//                                             required\r\n//                                             placeholder=\"비밀번호\"\r\n//                                         />\r\n//                                     </div>\r\n//                                     <button className='sign_button'>Sign In</button>\r\n//                                 </form>\r\n//                             </div>\r\n//                         </div>\r\n//                     </section>\r\n//                 </div>\r\n//             )}\r\n//         </Link>\r\n//     )\r\n// }\r\n\r\n// export default Login\r\nimport React, { useState, useCallback } from 'react';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom';\r\nimport useInput from '@hooks/useInput';\r\nimport { Success, Form, Error, Label, Input, LinkContainer, Button, Header } from 'Sign.css';\r\n\r\nconst Signup = () => {\r\n  const [email, onChangeEmail] = useInput('');\r\n  const [nickname, onChangeNickname] = useInput('');\r\n  // email, nickname 중복 -> 커스텀훅으로 제거\r\n  const [password, , setPassword] = useInput('');\r\n  const [passwordCheck, , setPasswordCheck] = useInput('');\r\n  const [mismatchError, setMismatchError] = useState(false);\r\n  const [signUpError, setSignUpError] = useState('');\r\n  const [signUpSuccess, setSignUpSuccess] = useState(false);\r\n\r\n  const onChangePassword = useCallback(\r\n    (e) => {\r\n      setPassword(e.target.value);\r\n      setMismatchError(e.target.value !== passwordCheck);\r\n    },\r\n    [passwordCheck],\r\n  );\r\n\r\n  const onChangePasswordCheck = useCallback(\r\n    (e) => {\r\n      setPasswordCheck(e.target.value);\r\n      setMismatchError(e.target.value !== password);\r\n    },\r\n    [password],\r\n  );\r\n\r\n  const onSubmit = useCallback(\r\n    (e) => {\r\n      e.preventDefault();\r\n      console.log(email, nickname, password, passwordCheck);\r\n      if (!mismatchError) {\r\n        console.log('서버로 회원가입하기');\r\n        setSignUpError('');\r\n        setSignUpSuccess(false);\r\n        // 요청 보내기 직전에 값들을 전부 초기화 해주자. 아니라면 요청을 연달아 날릴 때\r\n        // 첫번째 요청때 남아있던 결과가 두번째 요청때도 똑같이 표시되는\r\n        // 문제가 있을 수 있다.\r\n        axios\r\n          .post('/api/users', {\r\n            email,\r\n            nickname,\r\n            password,\r\n          })\r\n          .then((response) => {\r\n            // 성공시\r\n            console.log(response);\r\n            setSignUpSuccess(true);\r\n          })\r\n          .catch((error) => {\r\n            // 실패시\r\n            console.log(error.response);\r\n            setSignUpError(error.response.data);\r\n          })\r\n          .finally(() => {});\r\n      }\r\n    },\r\n    [email, nickname, password, passwordCheck],\r\n  );\r\n  return (\r\n    <div id=\"container\">\r\n      <Header>Sleact</Header>\r\n      <Form onSubmit={onSubmit}>\r\n        <Label id=\"email-label\">\r\n          <span>이메일 주소</span>\r\n          <div>\r\n            <Input type=\"email\" id=\"email\" name=\"email\" value={email} onChange={onChangeEmail} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"nickname-label\">\r\n          <span>닉네임</span>\r\n          <div>\r\n            <Input type=\"text\" id=\"nickname\" name=\"nickname\" value={nickname} onChange={onChangeNickname} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-label\">\r\n          <span>비밀번호</span>\r\n          <div>\r\n            <Input type=\"password\" id=\"password\" name=\"password\" value={password} onChange={onChangePassword} />\r\n          </div>\r\n        </Label>\r\n        <Label id=\"password-check-label\">\r\n          <span>비밀번호 확인</span>\r\n          <div>\r\n            <Input\r\n              type=\"password\"\r\n              id=\"password-check\"\r\n              name=\"password-check\"\r\n              value={passwordCheck}\r\n              onChange={onChangePasswordCheck}\r\n            />\r\n          </div>\r\n          {mismatchError && <Error>비밀번호가 일치하지 않습니다.</Error>}\r\n          {!nickname && <Error>닉네임을 입력해주세요.</Error>}\r\n          {signUpError && <Error>{signUpError}</Error>}\r\n          {signUpSuccess && <Success>회원가입 되었습니다! 로그인 해주세요.</Success>}\r\n        </Label>\r\n        <Button type=\"submit\">회원가입</Button>\r\n      </Form>\r\n      <LinkContainer>\r\n        이미 회원이신가요?&nbsp;\r\n        <Link to=\"/login\">로그인 하러가기</Link>\r\n      </LinkContainer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signup;"],"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"},"metadata":{},"sourceType":"module"}