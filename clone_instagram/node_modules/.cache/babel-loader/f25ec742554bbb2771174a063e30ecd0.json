{"ast":null,"code":"var _s = $RefreshSig$();\n\n// import { Link } from 'react-router-dom';\n// import { useRef, useState, useEffect, useContext } from 'react';\n// import AuthContext from \"../context/AuthProvider\";\n// import axios from 'axios';\n// const LOGIN_URL = 'http://127.0.0.1:8000/user/signin/';\n// const Login = () => {\n//     const { setAuth } = useContext(AuthContext);\n//     const userRef = useRef();\n//     const errRef = useRef();\n//     //이메일 이름 비밀번호\n//     const [email, setEmail] = useState('');\n//     const [nickname, setName] = useState('');\n//     const [password, setPwd] = useState('');\n//     //성공실패 여부\n//     const [errMsg, setErrMsg] = useState('');\n//     const [success, setSuccess] = useState(false);\n//     useEffect(() => {\n//         userRef.current.focus();\n//     }, [])\n//     useEffect(() => {\n//         setErrMsg('');\n//     }, [email, nickname, password])\n//     const handleSubmit = async (e) => {\n//         e.preventDefault(); {/*(e)코드를 작동하지 못하게 하는 메서드*/ }\n//         try {\n//             const response = await axios.post(LOGIN_URL,\n//                 JSON.stringify({ email, nickname, password }), {\n//                 headers: {\n//                     \"Content-Type\": 'application/json',\n//                 },\n//             });\n//             console.log(JSON.stringify(response?.data));\n//             //console.log(JSON.stringify(response));\n//             const token = response?.data?.token;\n//             const roles = response?.data?.roles;\n//             setAuth({ email, nickname, password, roles, token });\n//             setEmail('');\n//             setPwd('');\n//             setSuccess(true);\n//         } catch (err) {\n//             if (!err?.response) {\n//                 setErrMsg('No Server Response');\n//             }\n//             else if (err.response?.status === 400) {\n//                 setErrMsg('Missing Username or Password');\n//             }\n//             else if (err.response?.status === 401) {\n//                 setErrMsg('Unauthorized');\n//             }\n//             else {\n//                 setErrMsg('Login Failed');\n//             }\n//             errRef.current.focus();\n//         }\n//     }\n//     return (\n//         <Link to=\"/sign\">\n//             {success ? (\n//                 <section>\n//                     <h1>You are logged in!</h1>\n//                     <br />\n//                     <p>\n//                         <a href=\"#\">Go to Home</a>\n//                     </p>\n//                 </section>\n//             ) : (\n//                 <div className=\"sign_container\">\n//                     <section className='login_section'>\n//                         <p ref={errRef} className={errMsg ? \"errmsg\" :\n//                             \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\n//                         <div className='sign_border'>\n//                             <img className='sign_img' width=\"185\" height=\"70\" src=\"./image/pngegg.png\"></img>\n//                             <div className=\"sign\">\n//                                 <form onSubmit={handleSubmit}> {/*form전송을 하기 전 입력된 데이터의 유효성 체크하는 것*/}\n//                                     <div className=\"email\">\n//                                         <label htmlFor=\"useremail\"></label>\n//                                         <input\n//                                             className='sign_input'\n//                                             type=\"text\"\n//                                             id=\"useremail\"\n//                                             ref={userRef}\n//                                             autoComplete=\"off\"\n//                                             onChange={(e) => setEmail(e.target.value)}\n//                                             value={email}\n//                                             required\n//                                             placeholder=\"휴대폰 번호 또는 이메일 주소\"\n//                                         />\n//                                     </div>\n//                                     <div className=\"nickname\">\n//                                         <label htmlFor=\"nickname\"></label>\n//                                         <input\n//                                             className='sign_input'\n//                                             type=\"nickname\"\n//                                             id=\"nickname\"\n//                                             ref={userRef}\n//                                             autoComplete=\"off\"\n//                                             onChange={(e) => setName(e.target.value)}\n//                                             value={nickname}\n//                                             required\n//                                             placeholder=\"성명\"\n//                                         />\n//                                     </div>\n//                                     <div className=\"pwd\">\n//                                         <label htmlFor=\"password\"></label>\n//                                         <input\n//                                             className='login_input'\n//                                             type=\"password\"\n//                                             id=\"password\"\n//                                             ref={userRef}\n//                                             autoComplete=\"off\"\n//                                             onChange={(e) => setPwd(e.target.value)}\n//                                             value={password}\n//                                             required\n//                                             placeholder=\"비밀번호\"\n//                                         />\n//                                     </div>\n//                                     <button className='sign_button'>Sign In</button>\n//                                 </form>\n//                             </div>\n//                         </div>\n//                     </section>\n//                 </div>\n//             )}\n//         </Link>\n//     )\n// }\n// export default Login\nimport { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nconst Sign = () => {\n  _s();\n\n  const [email, setEmail] = useState([]);\n  const [nickname, setName] = useState('');\n  const [pwd, setPwd] = useState('');\n};\n\n_s(Sign, \"Rw+L/kQMsWC2YAnyQuTe4tgZaoo=\");\n\n_c = Sign;\n\nvar _c;\n\n$RefreshReg$(_c, \"Sign\");","map":{"version":3,"names":["useEffect","useState","axios","Sign","email","setEmail","nickname","setName","pwd","setPwd"],"sources":["C:/instagram/clone_instagram/src/Sign_components/Sign.js"],"sourcesContent":["// import { Link } from 'react-router-dom';\r\n// import { useRef, useState, useEffect, useContext } from 'react';\r\n// import AuthContext from \"../context/AuthProvider\";\r\n// import axios from 'axios';\r\n\r\n// const LOGIN_URL = 'http://127.0.0.1:8000/user/signin/';\r\n\r\n// const Login = () => {\r\n//     const { setAuth } = useContext(AuthContext);\r\n//     const userRef = useRef();\r\n//     const errRef = useRef();\r\n\r\n\r\n//     //이메일 이름 비밀번호\r\n//     const [email, setEmail] = useState('');\r\n//     const [nickname, setName] = useState('');\r\n//     const [password, setPwd] = useState('');\r\n\r\n//     //성공실패 여부\r\n//     const [errMsg, setErrMsg] = useState('');\r\n//     const [success, setSuccess] = useState(false);\r\n\r\n//     useEffect(() => {\r\n//         userRef.current.focus();\r\n\r\n//     }, [])\r\n//     useEffect(() => {\r\n//         setErrMsg('');\r\n//     }, [email, nickname, password])\r\n\r\n//     const handleSubmit = async (e) => {\r\n//         e.preventDefault(); {/*(e)코드를 작동하지 못하게 하는 메서드*/ }\r\n\r\n//         try {\r\n//             const response = await axios.post(LOGIN_URL,\r\n//                 JSON.stringify({ email, nickname, password }), {\r\n//                 headers: {\r\n//                     \"Content-Type\": 'application/json',\r\n//                 },\r\n//             });\r\n//             console.log(JSON.stringify(response?.data));\r\n//             //console.log(JSON.stringify(response));\r\n//             const token = response?.data?.token;\r\n//             const roles = response?.data?.roles;\r\n//             setAuth({ email, nickname, password, roles, token });\r\n//             setEmail('');\r\n//             setPwd('');\r\n//             setSuccess(true);\r\n//         } catch (err) {\r\n//             if (!err?.response) {\r\n//                 setErrMsg('No Server Response');\r\n//             }\r\n//             else if (err.response?.status === 400) {\r\n//                 setErrMsg('Missing Username or Password');\r\n//             }\r\n//             else if (err.response?.status === 401) {\r\n//                 setErrMsg('Unauthorized');\r\n//             }\r\n//             else {\r\n//                 setErrMsg('Login Failed');\r\n//             }\r\n//             errRef.current.focus();\r\n//         }\r\n//     }\r\n//     return (\r\n//         <Link to=\"/sign\">\r\n//             {success ? (\r\n//                 <section>\r\n//                     <h1>You are logged in!</h1>\r\n//                     <br />\r\n//                     <p>\r\n//                         <a href=\"#\">Go to Home</a>\r\n//                     </p>\r\n//                 </section>\r\n//             ) : (\r\n//                 <div className=\"sign_container\">\r\n//                     <section className='login_section'>\r\n//                         <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n//                             \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n//                         <div className='sign_border'>\r\n//                             <img className='sign_img' width=\"185\" height=\"70\" src=\"./image/pngegg.png\"></img>\r\n//                             <div className=\"sign\">\r\n//                                 <form onSubmit={handleSubmit}> {/*form전송을 하기 전 입력된 데이터의 유효성 체크하는 것*/}\r\n//                                     <div className=\"email\">\r\n//                                         <label htmlFor=\"useremail\"></label>\r\n//                                         <input\r\n//                                             className='sign_input'\r\n//                                             type=\"text\"\r\n//                                             id=\"useremail\"\r\n//                                             ref={userRef}\r\n//                                             autoComplete=\"off\"\r\n//                                             onChange={(e) => setEmail(e.target.value)}\r\n//                                             value={email}\r\n//                                             required\r\n//                                             placeholder=\"휴대폰 번호 또는 이메일 주소\"\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className=\"nickname\">\r\n//                                         <label htmlFor=\"nickname\"></label>\r\n//                                         <input\r\n//                                             className='sign_input'\r\n//                                             type=\"nickname\"\r\n//                                             id=\"nickname\"\r\n//                                             ref={userRef}\r\n//                                             autoComplete=\"off\"\r\n//                                             onChange={(e) => setName(e.target.value)}\r\n//                                             value={nickname}\r\n//                                             required\r\n//                                             placeholder=\"성명\"\r\n//                                         />\r\n//                                     </div>\r\n//                                     <div className=\"pwd\">\r\n//                                         <label htmlFor=\"password\"></label>\r\n//                                         <input\r\n//                                             className='login_input'\r\n//                                             type=\"password\"\r\n//                                             id=\"password\"\r\n//                                             ref={userRef}\r\n//                                             autoComplete=\"off\"\r\n//                                             onChange={(e) => setPwd(e.target.value)}\r\n//                                             value={password}\r\n//                                             required\r\n//                                             placeholder=\"비밀번호\"\r\n//                                         />\r\n//                                     </div>\r\n//                                     <button className='sign_button'>Sign In</button>\r\n//                                 </form>\r\n//                             </div>\r\n//                         </div>\r\n//                     </section>\r\n//                 </div>\r\n//             )}\r\n//         </Link>\r\n//     )\r\n// }\r\n\r\n// export default Login\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst Sign = () => {\r\n    const [email, setEmail] = useState([])\r\n    const [nickname, setName] = useState('')\r\n    const [pwd, setPwd] = useState('')\r\n}"],"mappingsoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EACf,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACK,QAAD,EAAWC,OAAX,IAAsBN,QAAQ,CAAC,EAAD,CAApC;EACA,MAAM,CAACO,GAAD,EAAMC,MAAN,IAAgBR,QAAQ,CAAC,EAAD,CAA9B;AACH,CAJD;;GAAME,I;;KAAAA,I"},"metadata":{},"sourceType":"module"}