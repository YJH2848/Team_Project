[{"C:\\배포\\Team_Project\\clone_instagram\\src\\index.js":"1","C:\\배포\\Team_Project\\clone_instagram\\src\\App.js":"2","C:\\배포\\Team_Project\\clone_instagram\\src\\context\\AuthProvider.js":"3","C:\\배포\\Team_Project\\clone_instagram\\src\\Login_components\\Login.js":"4","C:\\배포\\Team_Project\\clone_instagram\\src\\Sign_components\\Sign.js":"5","C:\\배포\\Team_Project\\clone_instagram\\src\\Main_components\\Real.js":"6"},{"size":379,"mtime":1656317968697,"results":"7","hashOfConfig":"8"},{"size":895,"mtime":1656317968685,"results":"9","hashOfConfig":"8"},{"size":354,"mtime":1656317968695,"results":"10","hashOfConfig":"8"},{"size":6191,"mtime":1656317968687,"results":"11","hashOfConfig":"8"},{"size":5959,"mtime":1656317968694,"results":"12","hashOfConfig":"8"},{"size":7081,"mtime":1656317968691,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1f3i9q8",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\배포\\Team_Project\\clone_instagram\\src\\index.js",[],[],"C:\\배포\\Team_Project\\clone_instagram\\src\\App.js",[],[],"C:\\배포\\Team_Project\\clone_instagram\\src\\context\\AuthProvider.js",[],[],"C:\\배포\\Team_Project\\clone_instagram\\src\\Login_components\\Login.js",["34","35","36","37","38"],[],"\r\nimport { useRef, useState, useEffect, useContext } from 'react';\r\nimport AuthContext from \"../context/AuthProvider\";\r\nimport axios from 'axios';\r\n\r\nconst LOGIN_URL = 'http://127.0.0.1:8000/user/signin/';\r\n\r\nconst Login = () => {\r\n    const { setAuth } = useContext(AuthContext);\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPwd] = useState('');\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [email, password])\r\n\r\n    // const onImgInputBtnClick = (event: any) => {\r\n    //     event.preventDefault();\r\n    //     logoImgInput.current.click();\r\n    // }\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); {/*(e)코드를 작동하지 못하게 하는 메서드*/ }\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify({ email, password }), {\r\n                headers: {\r\n                    \"Content-Type\": 'application/json',\r\n                },\r\n            });\r\n\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response));\r\n            const token = response?.data?.token;\r\n            const roles = response?.data?.roles;\r\n            setAuth({ email, password, roles, token });\r\n            setEmail('');\r\n            setPwd('');\r\n            setSuccess(true);\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            }\r\n            else if (err.response?.status === 400) {\r\n                setErrMsg('Missing Username or Password');\r\n            }\r\n            else if (err.response?.status === 401) {\r\n                setErrMsg('Unauthorized');\r\n            }\r\n            else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            {success ? (\r\n                <section>\r\n                    <h1>You are logged in!</h1>\r\n                    <br />\r\n                    <p>\r\n                        <a href=\"#\">Go to Home</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <div className=\"login_container\" >\r\n                    <section className='login_section'>\r\n                        <img className=\"smart_img\" src='https://www.instagram.com/static/images/homepage/phones/home-phones.png/1dc085cdb87d.png'></img>\r\n                        <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n                            \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                        <div className='border'>\r\n                            <img className='login_img' width=\"185\" height=\"70\" src=\"./image/pngegg.png\"></img>\r\n                            <div className=\"login\">\r\n                                <form onSubmit={handleSubmit}> {/*form전송을 하기 전 입력된 데이터의 유효성 체크하는 것*/}\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"useremail\"></label>\r\n                                        <input\r\n                                            className='login_input'\r\n                                            type=\"text\"\r\n                                            id=\"useremail\"\r\n                                            ref={userRef}\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                            value={email}\r\n                                            required\r\n                                            placeholder=\"사용자 이름 또는 이메일\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"pwd\">\r\n                                        <label htmlFor=\"password\"></label>\r\n                                        <input\r\n                                            className='login_input'\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            ref={userRef}\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(e) => setPwd(e.target.value)}\r\n                                            value={password}\r\n                                            required\r\n                                            placeholder=\"비밀번호\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                    <button className='login_button'>로그인</button>\r\n                                    <div className='line'>\r\n                                        또는\r\n                                    </div>\r\n                                </form>\r\n\r\n                                {/* <div onSubmit={onImgInputBtnClick   }>\r\n                                        <input\r\n                                            ref={logoImgInput}\r\n                                            type='file'\r\n                                            className='imgInput'\r\n                                            id='logoImg'\r\n                                            accept='image/*'\r\n                                            name='file'\r\n                                            onChange={onImgChange} \r\n                                        />\r\n\r\n                                    </div> */}\r\n\r\n                            </div>\r\n                        </div>\r\n                        <div className='noemail'>\r\n                            계정이 없으신가요?&nbsp;<a href=\"#\" className='join'>가입하기</a>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            )}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\배포\\Team_Project\\clone_instagram\\src\\Sign_components\\Sign.js",["39","40","41"],[],"import { Link } from 'react-router-dom';\r\nimport { useRef, useState, useEffect, useContext } from 'react';\r\nimport AuthContext from \"../context/AuthProvider\";\r\nimport axios from 'axios';\r\n\r\nconst LOGIN_URL = 'http://127.0.0.1:8000/user/signin/';\r\n\r\nconst Login = () => {\r\n    const { setAuth } = useContext(AuthContext);\r\n    const userRef = useRef();\r\n    const errRef = useRef();\r\n\r\n\r\n    //이메일 이름 비밀번호\r\n    const [email, setEmail] = useState('');\r\n    const [nickname, setName] = useState('');\r\n    const [password, setPwd] = useState('');\r\n\r\n    //성공실패 여부\r\n    const [errMsg, setErrMsg] = useState('');\r\n    const [success, setSuccess] = useState(false);\r\n\r\n    useEffect(() => {\r\n        userRef.current.focus();\r\n\r\n    }, [])\r\n    useEffect(() => {\r\n        setErrMsg('');\r\n    }, [email, nickname, password])\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault(); {/*(e)코드를 작동하지 못하게 하는 메서드*/ }\r\n\r\n        try {\r\n            const response = await axios.post(LOGIN_URL,\r\n                JSON.stringify({ email, nickname, password }), {\r\n                headers: {\r\n                    \"Content-Type\": 'application/json',\r\n                },\r\n            });\r\n            console.log(JSON.stringify(response?.data));\r\n            //console.log(JSON.stringify(response));\r\n            const token = response?.data?.token;\r\n            const roles = response?.data?.roles;\r\n            setAuth({ email, nickname, password, roles, token });\r\n            setEmail('');\r\n            setPwd('');\r\n            setSuccess(true);\r\n        } catch (err) {\r\n            if (!err?.response) {\r\n                setErrMsg('No Server Response');\r\n            }\r\n            else if (err.response?.status === 400) {\r\n                setErrMsg('Missing Username or Password');\r\n            }\r\n            else if (err.response?.status === 401) {\r\n                setErrMsg('Unauthorized');\r\n            }\r\n            else {\r\n                setErrMsg('Login Failed');\r\n            }\r\n            errRef.current.focus();\r\n        }\r\n    }\r\n    return (\r\n        <Link to=\"/sign\">\r\n            {success ? (\r\n                <section>\r\n                    <h1>You are logged in!</h1>\r\n                    <br />\r\n                    <p>\r\n                        <a href=\"#\">Go to Home</a>\r\n                    </p>\r\n                </section>\r\n            ) : (\r\n                <div className=\"sign_container\">\r\n                    <section className='login_section'>\r\n                        <p ref={errRef} className={errMsg ? \"errmsg\" :\r\n                            \"offscreen\"} aria-live=\"assertive\">{errMsg}</p>\r\n                        <div className='sign_border'>\r\n                            <img className='sign_img' width=\"185\" height=\"70\" src=\"./image/pngegg.png\"></img>\r\n                            <div className=\"sign\">\r\n                                <form onSubmit={handleSubmit}> {/*form전송을 하기 전 입력된 데이터의 유효성 체크하는 것*/}\r\n                                    <div className=\"email\">\r\n                                        <label htmlFor=\"useremail\"></label>\r\n                                        <input\r\n                                            className='sign_input'\r\n                                            type=\"text\"\r\n                                            id=\"useremail\"\r\n                                            ref={userRef}\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(e) => setEmail(e.target.value)}\r\n                                            value={email}\r\n                                            required\r\n                                            placeholder=\"휴대폰 번호 또는 이메일 주소\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"nickname\">\r\n                                        <label htmlFor=\"nickname\"></label>\r\n                                        <input\r\n                                            className='sign_input'\r\n                                            type=\"nickname\"\r\n                                            id=\"nickname\"\r\n                                            ref={userRef}\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(e) => setName(e.target.value)}\r\n                                            value={nickname}\r\n                                            required\r\n                                            placeholder=\"성명\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"pwd\">\r\n                                        <label htmlFor=\"password\"></label>\r\n                                        <input\r\n                                            className='login_input'\r\n                                            type=\"password\"\r\n                                            id=\"password\"\r\n                                            ref={userRef}\r\n                                            autoComplete=\"off\"\r\n                                            onChange={(e) => setPwd(e.target.value)}\r\n                                            value={password}\r\n                                            required\r\n                                            placeholder=\"비밀번호\"\r\n                                        />\r\n                                    </div>\r\n                                    <button className='sign_button'>Sign In</button>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </section>\r\n                </div>\r\n            )}\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","C:\\배포\\Team_Project\\clone_instagram\\src\\Main_components\\Real.js",[],[],{"ruleId":"42","severity":1,"message":"43","line":31,"column":29,"nodeType":"44","messageId":"45","endLine":31,"endColumn":58},{"ruleId":"46","severity":1,"message":"47","line":72,"column":25,"nodeType":"48","endLine":72,"endColumn":37},{"ruleId":"49","severity":1,"message":"50","line":78,"column":25,"nodeType":"48","endLine":78,"endColumn":147},{"ruleId":"49","severity":1,"message":"50","line":82,"column":29,"nodeType":"48","endLine":82,"endColumn":105},{"ruleId":"46","severity":1,"message":"47","line":136,"column":45,"nodeType":"48","endLine":136,"endColumn":74},{"ruleId":"42","severity":1,"message":"43","line":32,"column":29,"nodeType":"44","messageId":"45","endLine":32,"endColumn":58},{"ruleId":"46","severity":1,"message":"47","line":72,"column":25,"nodeType":"48","endLine":72,"endColumn":37},{"ruleId":"49","severity":1,"message":"50","line":81,"column":29,"nodeType":"48","endLine":81,"endColumn":104},"no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images."]